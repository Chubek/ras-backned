{
  "stats": {
    "suites": 7,
    "tests": 31,
    "passes": 31,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-26T19:14:54.225Z",
    "end": "2020-05-26T19:15:02.962Z",
    "duration": 8737,
    "testsRegistered": 31,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "15a99241-dc99-4d47-a558-abf9f1ba9e48",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "61cc2204-608c-4d58-b893-8bfec7afc3e5",
          "title": "Render",
          "fullFile": "D:\\resume-as-service\\Resume-as-a-service-updated\\backend\\test\\render.js",
          "file": "\\test\\render.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Render \"before all\" hook",
              "timedOut": false,
              "duration": 3493,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firebaseSetUp();\ntoken = await signInAndGetToken(\"aurlito@riseup.net\", \"H3ll0W0rld\");\nuserId = await admin.auth().verifyIdToken(token);\nResume.deleteMany({});\nconst resume = new Resume({\n  \"createdInfo.userId\": userId.uid,\n  \"createdInfo.resumeName\": \"My Resume\",\n  \"contactInfo.firstName\": \"Jagga\",\n  \"contactInfo.lastName\": \"Kirobi\",\n  \"contactInfo.phoneNumber\": \"555-555-1234\",\n  \"contactInfo.emailAddress\": \"kello@jello.com\",\n  \"contactInfo.city\": \"Algiers\",\n  \"contactInfo.state\": \"AK - Alaska\",\n  \"contactInfo.zipCode\": \"12345\",\n  \"summaryObjective.objective\": [\"Rio\", \"Dio\", \"Harp\"],\n  \"summaryObjective.summary\": [\"biodio\", \"kio hio\", \"lio dio\"],\n  \"summaryObjective.bluf\": [\"gggf\", \"sgdawdg\"],\n  historyExperience: [\n    {\n      companyName: \"Avacado Dado\",\n      location: \"Brazil\",\n      datesFrom: \"2013\",\n      datesTo: \"2301\",\n      dutiesAndTasks: [\"kerio\", \"herio\"],\n    },\n  ],\n  technicalSkills: [\n    {\n      skillName: \"Tarashkari\",\n      skillProficiency: \"Very Skilled\",\n      skillImportance: \"Side Hustle\",\n    },\n  ],\n  softwareSkills: [\n    {\n      softwareName: \"Taarashkari\",\n      skillProficiency: \"Very Skilled\",\n      skillImportance: \"Side Hustle\",\n    },\n  ],\n  degrees: [\n    { almaMater: \"Harvard\", degree: \"Dbiploma\", dateEarned: \"2013\" },\n  ],\n  certifications: [\n    {\n      certName: \"C+\",\n      grantedBy: \"Ario\",\n      dateEarned: \"2031\",\n      dateExpires: \"2015\",\n    },\n  ],\n  awardsAchievements: [\n    {\n      awardName: \"Oscards\",\n      awardCompany: \"The Academy\",\n      dateEarned: \"2002\",\n    },\n  ],\n  volunteering: [\n    {\n      orgName: \"RedCrsoss\",\n      tasksCompleted: [\"Fiobio\", \"Riobio\"],\n      dates: [\"20213\", \"2014\"],\n    },\n  ],\n});\nconst resumeDoc = await resume.save();\nresumeId = resumeDoc._id;",
              "err": {},
              "uuid": "8ae9263d-33b2-4aa1-b84e-9d0a3fe832df",
              "parentUUID": "61cc2204-608c-4d58-b893-8bfec7afc3e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should render the resume",
              "fullTitle": "Render it should render the resume",
              "timedOut": false,
              "duration": 2033,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(`/render/${resumeId}/template1`)\n  .set(\"x-auth-token\", token)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    console.log(res.body);\n    done();\n  });",
              "err": {},
              "uuid": "35671dcc-1276-42ec-b5ba-b7e05e52ccab",
              "parentUUID": "61cc2204-608c-4d58-b893-8bfec7afc3e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35671dcc-1276-42ec-b5ba-b7e05e52ccab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2033,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "2c0e9278-3ff7-4a31-8028-b62e7b05dbd1",
          "title": "Resume",
          "fullFile": "D:\\resume-as-service\\Resume-as-a-service-updated\\backend\\test\\resume.js",
          "file": "\\test\\resume.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Resume \"before all\" hook",
              "timedOut": false,
              "duration": 2399,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await Resume.deleteMany({});\ntoken = await signInAndGetToken(\"aurlito@riseup.net\", \"H3ll0W0rld\");\nuserId = await admin.auth().verifyIdToken(token);",
              "err": {},
              "uuid": "f5e43f05-4c9d-4c60-80c2-bfac01cfa2c1",
              "parentUUID": "2c0e9278-3ff7-4a31-8028-b62e7b05dbd1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4ffc0829-8ead-4cba-9608-cc765af2b0d3",
              "title": "Post Test",
              "fullFile": "D:\\resume-as-service\\Resume-as-a-service-updated\\backend\\test\\resume.js",
              "file": "\\test\\resume.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should create the resumes",
                  "fullTitle": "Resume Post Test it should create the resumes",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/resume/create\")\n  .set(\"x-auth-token\", token)\n  .send({ resumeName: \"Test Resume\" })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body.resumeId).to.not.be.null;\n    done();\n  });",
                  "err": {},
                  "uuid": "8ae27557-d939-4a58-908c-c64e6714ec08",
                  "parentUUID": "4ffc0829-8ead-4cba-9608-cc765af2b0d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8ae27557-d939-4a58-908c-c64e6714ec08"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 47,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "311c8314-d581-44d3-ab37-68113043c3c2",
              "title": "Put tests",
              "fullFile": "D:\\resume-as-service\\Resume-as-a-service-updated\\backend\\test\\resume.js",
              "file": "\\test\\resume.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Resume Put tests \"before all\" hook",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resumes = await Resume.find({});\nid = resumes[0]._id;",
                  "err": {},
                  "uuid": "1323087f-57fb-4bdd-869b-73802dd9ecaa",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should set resume contacts",
                  "fullTitle": "Resume Put tests it should set resume contacts",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/set/contacts/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    firstName: \"John\",\n    lastName: \"Lithgaw\",\n    phoneNumber: \"555-555-1234\",\n    emailAddress: \"chubak@bidpaa.com\",\n    city: \"Palermo\",\n    state: \"DE - Delaware\",\n    zipCode: \"70255á Ž9665\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "361d3234-6afe-4025-b4d0-85bbe18aebce",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should set resume summary",
                  "fullTitle": "Resume Put tests it should set resume summary",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/set/summary/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    objective: \"Coolio\",\n    summary: \"Hellio\",\n    bluf: \"Wellio\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "cc5f0251-6cec-4c07-8e67-7c07b252c45d",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should set resume history",
                  "fullTitle": "Resume Put tests it should set resume history",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/history/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    companyName: \"Carmen Santiago Ltd\",\n    location: \"Jerusalem\",\n    datesFrom: \"2012\",\n    datesTo: \"2016\",\n    dutiesAndTasks: [\"Killing a Mockingbird\", \"Killing a mockingjay\"],\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "071cc1f6-1c3c-4335-a5c7-3ed0ad8d7d8b",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should set resume tech skills",
                  "fullTitle": "Resume Put tests it should set resume tech skills",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/techskills/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    skillName: \"Freaking A\",\n    skillProficiency: \"Skilled Enough\",\n    skillImportance: \"Side Hustle\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "80eed45e-de6d-4efc-a7d2-37cfe21540b1",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should set resume history",
                  "fullTitle": "Resume Put tests it should set resume history",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/history/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    companyName: \"Carmen Santiago Ltd\",\n    location: \"Jerusalem\",\n    datesFrom: \"2012\",\n    datesTo: \"2016\",\n    dutiesAndTasks: [\"Killing a Mockingbird\", \"Killing a mockingjay\"],\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "e5dc43b4-862e-4549-92bc-c420f185f413",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should set resume software skills",
                  "fullTitle": "Resume Put tests it should set resume software skills",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/softwareskills/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    softwareName: \"Microsoft Lotus\",\n    skillProficiency: \"Skilled Enough\",\n    skillImportance: \"Side Hustle\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "0eaaaafc-da4c-405d-919f-2c81f01640c1",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should set resume degrees",
                  "fullTitle": "Resume Put tests it should set resume degrees",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/degrees/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    almaMater: \"Terran Killam U\",\n    degree: \"PhD\",\n    dateEarned: \"2001\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "94c6265a-5fb9-416e-9468-199b0e134bbb",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should set resume certs",
                  "fullTitle": "Resume Put tests it should set resume certs",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/certs/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    certName: \"A+\",\n    grantedBy: \"A Company\",\n    dateEarned: \"2012\",\n    dateExpires: \"2026\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "66ad32fb-42c7-456f-a454-38cd6afa4776",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should set resume awards",
                  "fullTitle": "Resume Put tests it should set resume awards",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/awards/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    awardName: \"Hill Street Blues\",\n    awardCompany: \"Kaltex Records\",\n    dateEarned: \"24/12\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "241e933a-b453-4104-9264-da842f27b712",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should set resume volunteerings",
                  "fullTitle": "Resume Put tests it should set resume volunteerings",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/volunteering/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    orgName: \"Killer Bee Lrd.\",\n    tasksCompleted: [\"Killing Bees\", \"Killings Wasps\", \"Killing WASPs\"],\n    dates: [\"2012\", \"20123\"],\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeUpdated\");\n    expect(res.body.resumeUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "33c097eb-bb26-4d17-a830-88a6d2c89193",
                  "parentUUID": "311c8314-d581-44d3-ab37-68113043c3c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "361d3234-6afe-4025-b4d0-85bbe18aebce",
                "cc5f0251-6cec-4c07-8e67-7c07b252c45d",
                "071cc1f6-1c3c-4335-a5c7-3ed0ad8d7d8b",
                "80eed45e-de6d-4efc-a7d2-37cfe21540b1",
                "e5dc43b4-862e-4549-92bc-c420f185f413",
                "0eaaaafc-da4c-405d-919f-2c81f01640c1",
                "94c6265a-5fb9-416e-9468-199b0e134bbb",
                "66ad32fb-42c7-456f-a454-38cd6afa4776",
                "241e933a-b453-4104-9264-da842f27b712",
                "33c097eb-bb26-4d17-a830-88a6d2c89193"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 204,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "75844908-c41d-4cf4-a2d1-af96e81949a1",
              "title": "Put del/edit",
              "fullFile": "D:\\resume-as-service\\Resume-as-a-service-updated\\backend\\test\\resume.js",
              "file": "\\test\\resume.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Resume Put del/edit \"before all\" hook",
                  "timedOut": false,
                  "duration": 10,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resumes = await Resume.find({});\nid = resumes[0]._id;",
                  "err": {},
                  "uuid": "2cd12b54-157e-44f0-9f07-c003d1599234",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should edit resume history",
                  "fullTitle": "Resume Put del/edit it should edit resume history",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/history/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    companyName: \"Carmen Santiago Ltd\",\n    location: \"Jerusalem\",\n    datesFrom: \"2012\",\n    datesTo: \"2016\",\n    dutiesAndTasks: [\"Killing a Mockingbird\", \"Killing a mockingjay\"],\n    edit: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexUpdated\");\n    expect(res.body.indexUpdated).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "d6f4dabb-128b-45ce-a41c-ac2aab605158",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should edit resume tech skills",
                  "fullTitle": "Resume Put del/edit it should edit resume tech skills",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/techskills/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    skillName: \"Freaking A\",\n    skillProficiency: \"Skilled Enough\",\n    skillImportance: \"Side Hustle\",\n    edit: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexUpdated\");\n    expect(res.body.indexUpdated).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "111373dd-a794-400e-be03-7966f06ed971",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should edit resume history",
                  "fullTitle": "Resume Put del/edit it should edit resume history",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/history/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    companyName: \"Carmen Santiago Ltd\",\n    location: \"Jerusalem\",\n    datesFrom: \"2012\",\n    datesTo: \"2016\",\n    dutiesAndTasks: [\"Killing a Mockingbird\", \"Killing a mockingjay\"],\n    edit: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexUpdated\");\n    expect(res.body.indexUpdated).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "94f5ad5c-3ad6-478c-bab6-89e3aabdb93d",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should edit resume software skills",
                  "fullTitle": "Resume Put del/edit it should edit resume software skills",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/softwareskills/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    softwareName: \"Microsoft Lotus\",\n    skillProficiency: \"Skilled Enough\",\n    skillImportance: \"Side Hustle\",\n    edit: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexUpdated\");\n    expect(res.body.indexUpdated).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "288fdcf0-b6c2-454c-bf62-13b425eb3bb4",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should edit resume degrees",
                  "fullTitle": "Resume Put del/edit it should edit resume degrees",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/degrees/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    almaMater: \"Terran Killam U\",\n    degree: \"PhD\",\n    dateEarned: \"2001\",\n    edit: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexUpdated\");\n    expect(res.body.indexUpdated).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "bcba5f11-e941-4726-96fe-593a82eb9a3f",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should edit resume certs",
                  "fullTitle": "Resume Put del/edit it should edit resume certs",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/certs/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    certName: \"A+\",\n    grantedBy: \"A Company\",\n    dateEarned: \"2012\",\n    dateExpires: \"2026\",\n    edit: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexUpdated\");\n    expect(res.body.indexUpdated).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "ed2d45a4-3423-43d5-a12f-e24d8853d775",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should edit resume awards",
                  "fullTitle": "Resume Put del/edit it should edit resume awards",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/awards/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    awardName: \"Hill Street Blues\",\n    awardCompany: \"Kaltex Records\",\n    dateEarned: \"24/12\",\n    edit: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexUpdated\");\n    expect(res.body.indexUpdated).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "89f17cde-704d-4f9b-a9ae-2bacd5f1d142",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should edit resume volunteerings",
                  "fullTitle": "Resume Put del/edit it should edit resume volunteerings",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/volunteering/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    orgName: \"Killer Bee Lrd.\",\n    tasksCompleted: [\"Killing Bees\", \"Killings Wasps\", \"Killing WASPs\"],\n    dates: [\"2012\", \"20123\"],\n    edit: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexUpdated\");\n    expect(res.body.indexUpdated).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "97b07831-de1a-4deb-9219-df7d08343d4a",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete resume history",
                  "fullTitle": "Resume Put del/edit it should delete resume history",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/history/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    companyName: \"Carmen Santiago Ltd\",\n    location: \"Jerusalem\",\n    datesFrom: \"2012\",\n    datesTo: \"2016\",\n    dutiesAndTasks: [\"Killing a Mockingbird\", \"Killing a mockingjay\"],\n    delete: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexDeleted\");\n    expect(res.body.indexDeleted).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "40e1ad0c-90a9-40a3-8cbd-02272f338278",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete resume tech skills",
                  "fullTitle": "Resume Put del/edit it should delete resume tech skills",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/techskills/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    skillName: \"Freaking A\",\n    skillProficiency: \"Skilled Enough\",\n    skillImportance: \"Side Hustle\",\n    delete: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexDeleted\");\n    expect(res.body.indexDeleted).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "8c487ba4-84de-41ad-8c75-7e1f02a76e99",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete resume history",
                  "fullTitle": "Resume Put del/edit it should delete resume history",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/history/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    companyName: \"Carmen Santiago Ltd\",\n    location: \"Jerusalem\",\n    datesFrom: \"2012\",\n    datesTo: \"2016\",\n    dutiesAndTasks: [\"Killing a Mockingbird\", \"Killing a mockingjay\"],\n    delete: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexDeleted\");\n    expect(res.body.indexDeleted).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "404f9a25-311d-417a-98ce-434d81643757",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete resume software skills",
                  "fullTitle": "Resume Put del/edit it should delete resume software skills",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/softwareskills/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    softwareName: \"Microsoft Lotus\",\n    skillProficiency: \"Skilled Enough\",\n    skillImportance: \"Side Hustle\",\n    delete: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexDeleted\");\n    expect(res.body.indexDeleted).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "de530393-8dcf-47ce-955e-4c885794c21d",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete resume degrees",
                  "fullTitle": "Resume Put del/edit it should delete resume degrees",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/degrees/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    almaMater: \"Terran Killam U\",\n    degree: \"PhD\",\n    dateEarned: \"2001\",\n    delete: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexDeleted\");\n    expect(res.body.indexDeleted).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "1523ffde-c5e0-42dc-b409-5f034f8adcb8",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete resume certs",
                  "fullTitle": "Resume Put del/edit it should delete resume certs",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/certs/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    certName: \"A+\",\n    grantedBy: \"A Company\",\n    dateEarned: \"2012\",\n    dateExpires: \"2026\",\n    delete: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexDeleted\");\n    expect(res.body.indexDeleted).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "081cff1c-578c-417f-bd1e-1e56817776b9",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete resume awards",
                  "fullTitle": "Resume Put del/edit it should delete resume awards",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/awards/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    awardName: \"Hill Street Blues\",\n    awardCompany: \"Kaltex Records\",\n    dateEarned: \"24/12\",\n    delete: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexDeleted\");\n    expect(res.body.indexDeleted).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "2d144bad-19ff-4401-87dd-f22a8eb11121",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete resume volunteerings",
                  "fullTitle": "Resume Put del/edit it should delete resume volunteerings",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/append/volunteering/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({\n    orgName: \"Killer Bee Lrd.\",\n    tasksCompleted: [\"Killing Bees\", \"Killings Wasps\", \"Killing WASPs\"],\n    dates: [\"2012\", \"20123\"],\n    delete: \"true\",\n    index: 0,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"indexDeleted\");\n    expect(res.body.indexDeleted).to.equal(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "f684ab26-716c-4e0a-8b0b-22f3cd970896",
                  "parentUUID": "75844908-c41d-4cf4-a2d1-af96e81949a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6f4dabb-128b-45ce-a41c-ac2aab605158",
                "111373dd-a794-400e-be03-7966f06ed971",
                "94f5ad5c-3ad6-478c-bab6-89e3aabdb93d",
                "288fdcf0-b6c2-454c-bf62-13b425eb3bb4",
                "bcba5f11-e941-4726-96fe-593a82eb9a3f",
                "ed2d45a4-3423-43d5-a12f-e24d8853d775",
                "89f17cde-704d-4f9b-a9ae-2bacd5f1d142",
                "97b07831-de1a-4deb-9219-df7d08343d4a",
                "40e1ad0c-90a9-40a3-8cbd-02272f338278",
                "8c487ba4-84de-41ad-8c75-7e1f02a76e99",
                "404f9a25-311d-417a-98ce-434d81643757",
                "de530393-8dcf-47ce-955e-4c885794c21d",
                "1523ffde-c5e0-42dc-b409-5f034f8adcb8",
                "081cff1c-578c-417f-bd1e-1e56817776b9",
                "2d144bad-19ff-4401-87dd-f22a8eb11121",
                "f684ab26-716c-4e0a-8b0b-22f3cd970896"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 203,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "50e96dc9-5f51-4adf-94d1-f6c25935bf26",
              "title": "Gets",
              "fullFile": "D:\\resume-as-service\\Resume-as-a-service-updated\\backend\\test\\resume.js",
              "file": "\\test\\resume.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Resume Gets \"before all\" hook",
                  "timedOut": false,
                  "duration": 3,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resume = new Resume({\n  \"createdInfo.userId\": userId.uid,\n  \"createdInfo.resumeName\": \"Resume Two\",\n});\nawait resume.save();",
                  "err": {},
                  "uuid": "0d139596-a7e8-452c-a842-eb8cd0549290",
                  "parentUUID": "50e96dc9-5f51-4adf-94d1-f6c25935bf26",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should get all the resumes by user",
                  "fullTitle": "Resume Gets it should get all the resumes by user",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/resume/get/all\")\n  .set(\"x-auth-token\", token)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeDocs\");\n    expect(res.body.resumeDocs).to.be.an(\"array\");\n    done();\n  });",
                  "err": {},
                  "uuid": "3675b57e-a0e1-4a44-b07e-cc03399bdea5",
                  "parentUUID": "50e96dc9-5f51-4adf-94d1-f6c25935bf26",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get a single resume",
                  "fullTitle": "Resume Gets it should get a single resume",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(`/resume/get/single/${id}`)\n  .set(\"x-auth-token\", token)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeDoc\");\n    expect(res.body.resumeDoc).to.be.an(\"object\");\n    done();\n  });",
                  "err": {},
                  "uuid": "b9ec4b85-e66e-4c2d-b3d0-95f65d04c101",
                  "parentUUID": "50e96dc9-5f51-4adf-94d1-f6c25935bf26",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3675b57e-a0e1-4a44-b07e-cc03399bdea5",
                "b9ec4b85-e66e-4c2d-b3d0-95f65d04c101"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 55,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "839ad705-3057-407d-8771-ad410f6a3cec",
              "title": "Restore",
              "fullFile": "D:\\resume-as-service\\Resume-as-a-service-updated\\backend\\test\\resume.js",
              "file": "\\test\\resume.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Resume Restore \"before all\" hook",
                  "timedOut": false,
                  "duration": 12,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await Resume.find({});\nrestoreId = doc[0].editCaptures[2]._id;",
                  "err": {},
                  "uuid": "d6278fc8-8f5f-4f1d-89c9-5615fcb5ff9d",
                  "parentUUID": "839ad705-3057-407d-8771-ad410f6a3cec",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should test the edit capture data",
                  "fullTitle": "Resume Restore it should test the edit capture data",
                  "timedOut": false,
                  "duration": 40,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/resume/restore/to/capture/${id}`)\n  .set(\"x-auth-token\", token)\n  .send({ restoreId: restoreId })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(err).to.be.null;\n    expect(res.body).to.have.property(\"resumeRestored\");\n    expect(res.body).to.have.property(\"resumeDoc\");\n    expect(res.body.resumeRestored).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "b2902ba6-36fe-4be5-99d3-7b4f36ea26ae",
                  "parentUUID": "839ad705-3057-407d-8771-ad410f6a3cec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2902ba6-36fe-4be5-99d3-7b4f36ea26ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 40,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}